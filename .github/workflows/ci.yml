name: Build
on:
  push:
    tags:
      - "*"
env:
  PROJECT_NAME: tc

permissions:
  contents: write
  pull-requests: write
  issues: read
  packages: none

jobs:
  build-musl-linux:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Set up cargo cache
        uses: actions/cache@v3
        continue-on-error: false
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            target/
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: ${{ runner.os }}-cargo-

      - name: Build Musl
        uses: gmiam/rust-musl-action@master
        with:
          args: cargo build --target x86_64-unknown-linux-musl --release

      - name: Compress binaries
        uses: svenstaro/upx-action@v2
        with:
          files: |
            target/x86_64-unknown-linux-musl/release/tc

      - name: Release MUSL
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: target/x86_64-unknown-linux-musl/release/tc
          asset_name: tc-x86_64-linux
          tag: ${{ github.ref }}

  build-aarch64-apple:
    # Set the job to run on the platform specified by the matrix below
    runs-on: ${{ matrix.runner }}

    # Define the build matrix for cross-compilation
    strategy:
      matrix:
        include:
          - name:  tc-aarch64-macos
            runner: macos-latest
            target: aarch64-apple-darwin

    # The steps to run for each matrix item
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: "${{ matrix.target }}"

      - name: Set up cargo cache
        uses: actions/cache@v3
        continue-on-error: false
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            target/
          key: ${{ matrix.runner }}-cargo-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: ${{ matrix.runner }}-cargo-

      - name: Build
        run: cargo build --release --target ${{ matrix.target }}

      - name: Compress binaries
        uses: svenstaro/upx-action@v2
        with:
          files: |
            target/${{ matrix.target }}/release/tc
            args: --best
            strip: true

      - name: Release
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: target/${{ matrix.target }}/release/tc
          asset_name: ${{ matrix.name }}
          tag: ${{ github.ref }}
